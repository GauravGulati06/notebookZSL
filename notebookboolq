{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.14","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceId":896930,"sourceType":"datasetVersion","datasetId":479748}],"dockerImageVersionId":30805,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"\"\"\"\nkaggle authentication\nlibrary imports\n\n# DATASET:\nclass: Dataset Loader Class\n    pipeline (general)\n    preferred output -> pandas.Dataframe\n\n# MODEL LOADER:\nclass: model_name - Load\n    pipeline (general)\n    generate_output(prompt) -> text output\n\n# INFERENCE:\nopen csv\ndataset load\nmodel load\n\nfor tqdm -> to show progress bar and estimated/elapsed time\n    \n    prompt = construct (datapoint->extract->prompt)\n    output = model.generate_output(prompt)\n    csv.write(output)\n    \n\"\"\"","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Setup","metadata":{}},{"cell_type":"code","source":"# imports and authentication\n\nimport pandas as pd\nimport numpy as np\nfrom tqdm import tqdm\nfrom transformers import pipeline, AutoTokenizer, AutoModelForCausalLM","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-11T17:56:53.273504Z","iopub.execute_input":"2024-12-11T17:56:53.273898Z","iopub.status.idle":"2024-12-11T17:57:15.987705Z","shell.execute_reply.started":"2024-12-11T17:56:53.273860Z","shell.execute_reply":"2024-12-11T17:57:15.986258Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Dataset","metadata":{}},{"cell_type":"code","source":"# loader function - returns a Dataframeimport os\n# DATASET:\n\nclass DatasetLoader:\n    def __init__(self, json_file):\n        self.json_file = json_file\n\n    def load(self):\n        \"\"\"Loads the dataset from a JSON file and converts it to a pandas DataFrame.\"\"\"\n        print(f\"Loading dataset from: {self.json_file}...\")\n        df = pd.read_json(self.json_file, lines=True)\n        return df\n\n    @staticmethod\n    def preprocess_boolq(df):\n        \"\"\"Preprocesses the BoolQ dataset.\"\"\"\n        df = df.rename(columns={\"question\": \"Question\", \"title\" : \"Title\",\"passage\": \"Context\", \"answer\": \"Answer\"})\n        return df\n\njson_file = \"/kaggle/input/boolq-dataset/train.jsonl\"\ndataset_loader = DatasetLoader(json_file)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2024-12-11T18:00:31.321398Z","iopub.execute_input":"2024-12-11T18:00:31.322977Z","iopub.status.idle":"2024-12-11T18:00:31.330228Z","shell.execute_reply.started":"2024-12-11T18:00:31.322929Z","shell.execute_reply":"2024-12-11T18:00:31.328803Z"}},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Model","metadata":{}},{"cell_type":"code","source":"# model loader class - provides generate output function\n","metadata":{"trusted":true},"outputs":[],"execution_count":null},{"cell_type":"markdown","source":"# Inference","metadata":{}},{"cell_type":"code","source":"# inference - output saved as csv","metadata":{"trusted":true},"outputs":[],"execution_count":null}]}